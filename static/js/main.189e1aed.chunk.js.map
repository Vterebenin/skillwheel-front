{"version":3,"sources":["components/SkillWheel/Index.js","components/SiderDemo/Index.js","App.js","serviceWorker.js","index.js"],"names":["Index","e","console","log","target","dataset","group","document","getElementById","concat","thisChunk","parentNode","appendChild","color","i","Math","floor","random","_this","this","react_default","a","createElement","id","xmlns","width","height","viewBox","fill","className","onMouseEnter","index","handleMouseEnter","data-group","d","getRandomColor","stroke","Component","Header","Layout","Content","Footer","Sider","SubMenu","Menu","SiderDemo","state","collapsed","onTitleClick","key","domEvent","onCollapse","setState","layout","style","minHeight","collapsible","menu","theme","defaultSelectedKeys","mode","Item","icon","type","title","background","padding","margin","breadcrumb","Index_Index","textAlign","React","App","SiderDemo_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.189e1aed.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './style.css';\r\n\r\nexport default class Index extends Component {\r\n\r\n  handleMouseEnter(e) {\r\n    console.log(e.target.dataset.group);\r\n    console.log(document.getElementById(`chunk${e.target.dataset.group}`))\r\n    const thisChunk = document.getElementById(`chunk${e.target.dataset.group}`);\r\n    // const svgNode = document.getElementById('skill-wheel').childNodes;\r\n    thisChunk.parentNode.appendChild(thisChunk);\r\n  }\r\n\r\n  getRandomColor() {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (var i=0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      <div>\r\n        <svg\r\n          id=\"skill-wheel\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"605\"\r\n          height=\"604\"\r\n          viewBox=\"0 0 605 604\"\r\n          fill=\"none\"\r\n        >\r\n          <g id=\"chunk2\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"2\" d=\"M372.86 371.31C392.167 348.192 399.201 333.295 401.144 301.307H551.758C546.547 384.758 526.407 423.303 478.926 477.376L372.86 371.31Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"2\" d=\"M372.86 371.31C393.001 348.357 398.676 332.78 401.144 301.307H501.553C498.725 361.411 486.704 393.231 443.57 442.021L372.86 371.31Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"2\" d=\"M408.215 406.666C438.201 374.374 448.52 351.511 451.349 301.307H401.144C399.023 331.005 393.979 346.816 372.86 371.31L408.215 406.666Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk1\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"1\" d=\"M401.5 301C398.805 271.001 393.245 255.492 372 231.5L478.5 125C533.824 187.694 546.839 229.189 551.5 301H401.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"1\" d=\"M401.5 301C399.512 270.528 392.51 255.5 372 231.5L443 160.5C483.5 205 497.5 236 501.5 301H401.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"1\" d=\"M451.5 301C449.869 256.963 441 233.5 407.5 196L372 231.5C391.5 254 399.113 268.746 401.5 301H451.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk3\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"3\" d=\"M303 400.5C332.999 397.805 348.508 392.245 372.5 371L479 477.5C416.306 532.824 374.811 545.839 303 550.5L303 400.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"3\" d=\"M303 400.5C333.472 398.512 348.5 391.51 372.5 371L443.5 442C399 482.5 368 496.5 303 500.5L303 400.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"3\" d=\"M303 450.5C347.037 448.869 370.5 440 408 406.5L372.5 371C350 390.5 335.254 398.113 303 400.5L303 450.5Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk4\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"4\" d=\"M232.224 372.073C255.342 391.38 270.24 398.415 302.227 400.357V550.971C218.776 545.76 180.232 525.621 126.158 478.139L232.224 372.073Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"4\" d=\"M232.224 372.073C255.177 392.214 270.754 397.889 302.227 400.357V500.767C242.123 497.938 210.304 485.917 161.513 442.784L232.224 372.073Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"4\" d=\"M196.869 407.428C229.16 437.414 252.023 447.734 302.227 450.562V400.357C272.529 398.236 256.719 393.192 232.224 372.073L196.869 407.428Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk5\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"5\" d=\"M202.759 302.104C205.453 332.104 211.013 347.612 232.259 371.604L125.759 478.104C70.4343 415.41 57.4201 373.915 52.7587 302.104L202.759 302.104Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"5\" d=\"M202.759 302.104C204.747 332.576 211.749 347.604 232.259 371.604L161.259 442.604C120.759 398.104 106.759 367.104 102.759 302.104L202.759 302.104Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"5\" d=\"M152.759 302.104C154.389 346.141 163.259 369.604 196.759 407.104L232.259 371.604C212.759 349.104 205.146 334.358 202.759 302.104L152.759 302.104Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk6\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"6\" d=\"M231.517 232.066C212.21 255.184 205.175 270.082 203.233 302.07L52.6188 302.07C57.8298 218.618 77.9691 180.074 125.451 126L231.517 232.066Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"6\" d=\"M231.517 232.066C211.376 255.019 205.701 270.596 203.233 302.07L102.823 302.07C105.652 241.966 117.673 210.146 160.806 161.355L231.517 232.066Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"6\" d=\"M196.161 196.711C166.176 229.002 155.856 251.865 153.028 302.07L203.233 302.07C205.354 272.371 210.398 256.561 231.517 232.066L196.161 196.711Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk7\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"7\" d=\"M301 203C271.001 205.695 255.492 211.255 231.5 232.5L125 126C187.694 70.6756 229.189 57.6614 301 53L301 203Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"7\" d=\"M301 203C270.528 204.988 255.5 211.99 231.5 232.5L160.5 161.5C205 121 236 107 301 103L301 203Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"7\" d=\"M301 153C256.963 154.631 233.5 163.5 196 197L231.5 232.5C254 213 268.746 205.387 301 203L301 153Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          <g id=\"chunk8\" className=\"skill-wheel__kusok\"  onMouseEnter={(e, index) => this.handleMouseEnter(e, index)}>\r\n            <path data-group=\"8\" d=\"M372.31 231.517C349.192 212.209 334.295 205.175 302.307 203.233V52.6188C385.758 57.8298 424.303 77.9691 478.376 125.451L372.31 231.517Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"8\" d=\"M372.31 231.517C349.357 211.376 333.78 205.701 302.307 203.233V102.823C362.411 105.652 394.231 117.673 443.021 160.806L372.31 231.517Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n            <path data-group=\"8\" d=\"M407.666 196.161C375.374 166.176 352.511 155.856 302.307 153.028V203.233C332.005 205.354 347.816 210.398 372.31 231.517L407.666 196.161Z\" fill={this.getRandomColor()} stroke={this.getRandomColor()} />\r\n          </g>\r\n          {/* <use id=\"use\" href=\"#chunk1\" /> */}\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport SkillWheel from '../SkillWheel/Index';\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SiderDemo extends React.Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onTitleClick = (key, domEvent) => {\r\n        return false;\r\n    }\r\n\r\n    onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                    <div className=\"logo\" />\r\n                    <Menu onTitleClick={this.onTitleClick} theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"pie-chart\" />\r\n                            <span>Option 1</span>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"2\">\r\n                            <Icon type=\"desktop\" />\r\n                            <span>Option 2</span>\r\n                        </Menu.Item>\r\n                        <SubMenu\r\n                            key=\"sub1\"\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"user\" />\r\n                                    <span>User</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"3\">Tom</Menu.Item>\r\n                            <Menu.Item key=\"4\">Bill</Menu.Item>\r\n                            <Menu.Item key=\"5\">Alex</Menu.Item>\r\n                        </SubMenu>\r\n                        <SubMenu\r\n                            key=\"sub2\"\r\n                            title={\r\n                                <span>\r\n                                    <Icon type=\"team\" />\r\n                                    <span>Team</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                        </SubMenu>\r\n                        <Menu.Item key=\"9\">\r\n                            <Icon type=\"file\" />\r\n                            <span>File</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                    <Header style={{ background: '#fff', padding: 0 }} />\r\n                    <Content style={{ margin: '0 16px' }}>\r\n                        <Breadcrumb style={{ margin: '16px 0' }}>\r\n                            <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                            <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                        </Breadcrumb>\r\n                        <SkillWheel />\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SiderDemo","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport SiderDemo from './components/SiderDemo/Index'\nimport 'antd/dist/antd.css';\n\nfunction App() {\n  return (\n    <SiderDemo />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}